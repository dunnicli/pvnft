import Link from "next/link";
import Head from "next/head";
import { useSession } from "next-auth/client";
import Image from "next/image";
import splogo from "../../../../public/images/spca-pv1.gif";
import { toast, ToastContainer } from "react-nextjs-toast";
import { useState, useRef } from "react";
import Router from "next/router";
// const fs = require("fs");

// Start code
export default function SendNft() {
  const formRef = useRef();
  const [disable, setDisable] = useState(false);
  const [session] = useSession();
  const webhook = process.env.NEXT_PUBLIC_AUTOTASK1;

  async function saveNft() {
    setDisable(true);
    const { editUri, editRecipient } = formRef.current;

    const uri = editUri.value;
    const recipient = editRecipient.value;

    //
    let formData = {
      uri,
      recipient,
    };

    // End new code

    //toast.notify(`NFT is processing!`);
    toast.notify(
      "Please wait for the blockchain operations to complete. This might take 30 seconds or more.",
      {
        duration: 20,
        title: "Creating NFT",
        type: "success",
      }
    );

    const response = await fetch(webhook, {
      method: "POST",
      body: JSON.stringify(formData),
      headers: { "Content-Type": "application/json" },
    });

    const added = await response.json();

    if (added) {
      console.log("JD JSON reply: ", added);

      const flog = Buffer.from(added.encodedLogs, "base64");
      const fflog = flog.toString();

      // 146 and 215
      // should be 148 and 214
      const firstat = fflog.indexOf("@@") + 2;
      const lastat = fflog.lastIndexOf("@@");

      // Put @ signs in my console log.
      var res = fflog.substring(firstat, lastat);

      var tokenId = parseInt(res, 16);
    } else {
      var tokenId = 9999;
    }

    // GET THE PAYMENT ID
    //const paymentId = pmtid;

    // GET THE PAYMENT STATUS
    toast.remove();
    return await Router.push(`/manager/old/oz/success/${tokenId}`);
  }

  return (
    <div>
      <Head>
        <title>Send NFT Only to AutoTask</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex h-full my-10">
        <div className="flex-auto w-1/4 p-5 border-2 ml-5">
          <div className="mt-1">
            <Image
              className="rounded-lg"
              src={splogo}
              alt="logo"
              width={150}
              height={127}
            />
          </div>
          <p>&nbsp;</p>
          <p>NFT Points Available: </p>
          <p>Dashboard</p>
          <p>Donations To Date: </p>
          <p>History</p>
          <p>More...</p>
        </div>

        <div className="flex-auto w-3/4 p-5 ml-10 mr-10">
          <div className="text-center">
            <h1>NFT Form</h1>
          </div>
          <p>&nbsp;</p>
          <p>&nbsp;</p>
          <form
            ref={formRef}
            className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
          >
            <p>
              <b>URI</b>
              <br />
              <input
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                type="text"
                placeholder="New URI"
                defaultValue=""
                name="editUri"
                required
              />
            </p>
            <p>&nbsp;</p>
            <p>
              <b>Recipient Address</b>
              <br />
              <input
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                type="text"
                placeholder="Ethereum Address"
                defaultValue=""
                name="editRecipient"
                required
              />
            </p>
            <p>&nbsp;</p>
            <p>&nbsp;</p>

            <p>&nbsp;</p>
            <ToastContainer />
            <p>&nbsp;</p>
            <p>
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                disabled={disable}
                onClick={() => saveNft()}
              >
                Send NFT to AutoTask
              </button>
            </p>
          </form>
          <p>&nbsp;</p>
          <p>&nbsp;</p>
          <p>
            This is a very simple prototype form to test NFT creation using
            OpenZeppelin Defender with Relay and AutoTask.
          </p>
          <p>&nbsp;</p>
        </div>
      </div>
    </div>
  );
}
