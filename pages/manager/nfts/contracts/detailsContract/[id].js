import Link from "next/link";
import React from "react";
import Router from "next/router";
import Head from "next/head";
import prisma from "../../../../../lib/prisma.ts";

export async function getServerSideProps(context) {
  const { id } = context.params;
  const contract = await prisma.contract.findUnique({
    where: { id: parseInt(id) },
    include: {
      ownerUser: {
        select: { name: true, id: true, email: true },
      },
    },
  });
  return {
    props: {
      contract,
    },
  };
}

async function deleteContract(id) {
  await fetch(`/api/notess/noteDelete/${id}`, {
    method: "DELETE",
  });
  Router.push("/notes");
}

export default function ContractView(props) {
  //const router = useRouter();
  const { contract } = props;

  return (
    <div className="flex flex-col min-h-screen">
      <Head>
        <title>{contract.contractName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <h1>{contract.contractName}</h1>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>
          Name:&nbsp; &nbsp; <b>{contract.contractName}</b>
        </p>
        <p>
          Token Type:&nbsp; &nbsp; <b>{contract.tokenType}</b>
        </p>
        <p>
          Address:&nbsp; &nbsp; <b>{contract.address}</b>
        </p>
        <p>
          Token Name:&nbsp; &nbsp; <b>{contract.tokenName}</b>
        </p>
        <p>
          Token Symbol:&nbsp; &nbsp; <b>{contract.tokenSymbol}</b>
        </p>
        <p>
          Network:&nbsp; &nbsp; <b>{contract.network}</b>
        </p>
        <p>
          Etherscan:&nbsp; &nbsp;
          <a
            target="_blank"
            rel="noopener noreferrer"
            title="Open link in a new tab"
            href={`${contract.scanUrl}`}
          >
            View Contract on Blockchain
          </a>
        </p>

        <p>
          Contract Owner Address:&nbsp; &nbsp; <b>{contract.ownerAddress}</b>
        </p>
        <p>
          User:&nbsp; &nbsp;{" "}
          <b>
            {contract?.ownerUser?.name}&nbsp; &nbsp;
            {contract?.ownerUser?.email}
          </b>
        </p>
        <p>
          Contract Owner User ID:&nbsp; &nbsp; <b>{contract.ownerId}</b>
        </p>
        <p>
          Description:&nbsp; &nbsp; <b>{contract.description}</b>
        </p>
        <p>
          Notes:&nbsp; &nbsp; <b>{contract.notes}</b>
        </p>
        <p>
          Created At:&nbsp; &nbsp; <b>{contract.createdAt.toLocaleString()}</b>
        </p>
        <p>
          Created By:&nbsp; &nbsp; <b>{contract.createdBy}</b>
        </p>
        <p>
          Updated At:&nbsp; &nbsp; <b>{contract.updatedAt.toLocaleString()}</b>
        </p>
        <p>
          Updated By:&nbsp; &nbsp; <b>{contract.updatedBy}</b>
        </p>
        <p>
          Deleted?:&nbsp; &nbsp; <b>{contract.deleted}</b>
        </p>
        <p>&nbsp;</p>
        <div className="page-nav">
          <Link href={`/manager/nfts/contracts/editContract/${contract.id}`}>
            Edit
          </Link>
          - &nbsp;
          <button
            className="delete button"
            onClick={() => {
              const confirmBox = window.confirm(
                "Do you really want to delete this Contract?"
              );
              if (confirmBox === true) {
                deleteContract(contract.id);
              }
            }}
          >
            Delete
          </button>
          <p>&nbsp;</p>
          <Link href={`/manager/nfts/tokens/newToken/${contract.id}`}>
            <a>Add New Token</a>
          </Link>
          <p>&nbsp;</p>
          <p>
            <Link href="/manager/nfts/contracts">
              <a>Back to Contracts</a>
            </Link>
          </p>
        </div>
      </main>
      <footer className="text-center font-bold text-xl">
        <b>Powered by John Dunnicliffe</b>
      </footer>
    </div>
  );
}
